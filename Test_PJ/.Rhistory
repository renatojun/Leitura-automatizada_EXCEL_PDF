# Salve a planilha
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
# Caminho para o arquivo PDF do cartão de ponto
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
# Extraia o texto do PDF
texto_pdf <- pdf_text(caminho_pdf)
# Processamento do texto e extração dos dados
# Aqui você precisaria implementar a lógica para extrair as informações relevantes
# Função para extrair os dados entre a primeira e a última linha do PDF
extrair_dados <- function(texto) {
# Divida o texto em linhas
linhas <- strsplit(texto, "\n")[[1]]
# Inicialize uma lista para armazenar os dados de cada linha
dados <- list()
# Loop sobre as linhas para extrair os dados
for (i in 1:length(linhas)) {
linha <- linhas[i]
# Divida a linha em colunas (supondo que as colunas são separadas por espaço em branco)
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
# Adicione as colunas à lista de dados
dados[[i]] <- colunas
}
# Converta a lista de dados em um dataframe
dados_df <- as.data.frame(do.call(rbind, dados))
# Retorne o dataframe de dados
return(dados_df)
}
# Extrair os dados entre a primeira e a última linha do PDF
dados <- extrair_dados(texto_pdf)
# Imprimir os dados extraídos
print(dados)
# Abra a planilha do Excel
wb <- createWorkbook()
# Adicione uma nova planilha
addWorksheet(wb, "Planilha1")
# Escreva cada coluna em células separadas
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Planilha1", dados[, i], startCol = i, startRow = 1)
}
----
# Defina o estilo de célula para centralizar o conteúdo
addStyle(wb, "Planilha1", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold"))
# Caminho para o arquivo PDF do cartão de ponto
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
# Extraia o texto do PDF
texto_pdf <- pdf_text(caminho_pdf)
# Processamento do texto e extração dos dados
# Aqui você precisaria implementar a lógica para extrair as informações relevantes
# Função para extrair os dados entre a primeira e a última linha do PDF
extrair_dados <- function(texto) {
# Divida o texto em linhas
linhas <- strsplit(texto, "\n")[[1]]
# Inicialize uma lista para armazenar os dados de cada linha
dados <- list()
# Loop sobre as linhas para extrair os dados
for (i in 1:length(linhas)) {
linha <- linhas[i]
# Divida a linha em colunas (supondo que as colunas são separadas por espaço em branco)
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
# Adicione as colunas à lista de dados
dados[[i]] <- colunas
}
# Converta a lista de dados em um dataframe
dados_df <- as.data.frame(do.call(rbind, dados))
# Retorne o dataframe de dados
return(dados_df)
}
# Extrair os dados entre a primeira e a última linha do PDF
dados <- extrair_dados(texto_pdf)
# Abra a planilha do Excel
wb <- createWorkbook()
# Adicione uma nova planilha
addWorksheet(wb, "Planilha1")
# Escreva cada coluna em células separadas
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Planilha1", dados[, i], startCol = i, startRow = 1)
# Defina o estilo de célula para centralizar o conteúdo
addStyle(wb, "Planilha1", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold"))
addStyle(wb, "Planilha1", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(horizontal = "center"))
}
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
# Extraia o texto do PDF
texto_pdf <- pdf_text(caminho_pdf)
# Processamento do texto e extração dos dados
# Aqui você precisaria implementar a lógica para extrair as informações relevantes
# Função para extrair os dados entre a primeira e a última linha do PDF
extrair_dados <- function(texto) {
# Divida o texto em linhas
linhas <- strsplit(texto, "\n")[[1]]
# Inicialize uma lista para armazenar os dados de cada linha
dados <- list()
# Loop sobre as linhas para extrair os dados
for (i in 1:length(linhas)) {
linha <- linhas[i]
# Divida a linha em colunas (supondo que as colunas são separadas por espaço em branco)
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
# Adicione as colunas à lista de dados
dados[[i]] <- colunas
}
# Converta a lista de dados em um dataframe
dados_df <- as.data.frame(do.call(rbind, dados))
# Retorne o dataframe de dados
return(dados_df)
}
# Extrair os dados entre a primeira e a última linha do PDF
dados <- extrair_dados(texto_pdf)
# Carregue o pacote openxlsx
library(openxlsx)
# Abra a planilha do Excel
wb <- createWorkbook()
# Adicione uma nova planilha
addWorksheet(wb, "Colunas")
# Escreva cada coluna em células separadas e defina o estilo de célula para centralizar o conteúdo
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Colunas", dados[, i], startCol = i, startRow = 1)
# Defina o estilo de célula para centralizar o conteúdo
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold"))
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(horizontal = "center"))
}
# Caminho para o arquivo PDF do cartão de ponto
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
# Extraia o texto do PDF
texto_pdf <- pdf_text(caminho_pdf)
# Processamento do texto e extração dos dados
# Aqui você precisaria implementar a lógica para extrair as informações relevantes
# Função para extrair os dados entre a primeira e a última linha do PDF
extrair_dados <- function(texto) {
# Divida o texto em linhas
linhas <- strsplit(texto, "\n")[[1]]
# Inicialize uma lista para armazenar os dados de cada linha
dados <- list()
# Loop sobre as linhas para extrair os dados
for (i in 1:length(linhas)) {
linha <- linhas[i]
# Divida a linha em colunas (supondo que as colunas são separadas por espaço em branco)
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
# Adicione as colunas à lista de dados
dados[[i]] <- colunas
}
# Converta a lista de dados em um dataframe
dados_df <- as.data.frame(do.call(rbind, dados))
# Retorne o dataframe de dados
return(dados_df)
}
# Extrair os dados entre a primeira e a última linha do PDF
dados <- extrair_dados(texto_pdf)
# Carregue o pacote openxlsx
library(openxlsx)
# Abra a planilha do Excel
wb <- createWorkbook()
# Adicione uma nova planilha
addWorksheet(wb, "Colunas")
# Escreva cada coluna em células separadas e defina o estilo de célula para centralizar o conteúdo
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Colunas", dados[, i], startCol = i, startRow = 1)
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold", hAlign = "center"))
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
# Caminho para o arquivo PDF do cartão de ponto
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
# Extraia o texto do PDF
texto_pdf <- pdf_text(caminho_pdf)
# Processamento do texto e extração dos dados
# Aqui você precisaria implementar a lógica para extrair as informações relevantes
# Função para extrair os dados entre a primeira e a última linha do PDF
extrair_dados <- function(texto) {
# Divida o texto em linhas
linhas <- strsplit(texto, "\n")[[1]]
# Inicialize uma lista para armazenar os dados de cada linha
dados <- list()
# Loop sobre as linhas para extrair os dados
for (i in 1:length(linhas)) {
linha <- linhas[i]
# Divida a linha em colunas (supondo que as colunas são separadas por espaço em branco)
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
# Adicione as colunas à lista de dados
dados[[i]] <- colunas
}
# Converta a lista de dados em um dataframe
dados_df <- as.data.frame(do.call(rbind, dados))
# Retorne o dataframe de dados
return(dados_df)
}
# Extrair os dados entre a primeira e a última linha do PDF
dados <- extrair_dados(texto_pdf)
# Carregue o pacote openxlsx
library(openxlsx)
# Abra a planilha do Excel
wb <- createWorkbook()
# Adicione uma nova planilha
addWorksheet(wb, "Colunas")
# Escreva cada coluna em células separadas e defina o estilo de célula para centralizar o conteúdo
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Colunas", dados[, i], startCol = i, startRow = 1)
# Defina o estilo de célula para centralizar o conteúdo
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold"))
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(horizontal = "center"))
}
install.packages("pdftools")
install.packages("openxlsx")
install.packages("openxlsx")
install.packages("openxlsx")
library(pdftools)
library(openxlsx)
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
# Extraia o texto do PDF
texto_pdf <- pdf_text(caminho_pdf)
# Processamento do texto e extração dos dados
# Aqui você precisaria implementar a lógica para extrair as informações relevantes
# Função para extrair os dados entre a primeira e a última linha do PDF
extrair_dados <- function(texto) {
# Divida o texto em linhas
linhas <- strsplit(texto, "\n")[[1]]
# Inicialize uma lista para armazenar os dados de cada linha
dados <- list()
# Loop sobre as linhas para extrair os dados
for (i in 1:length(linhas)) {
linha <- linhas[i]
# Divida a linha em colunas (supondo que as colunas são separadas por espaço em branco)
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
# Adicione as colunas à lista de dados
dados[[i]] <- colunas
}
# Converta a lista de dados em um dataframe
dados_df <- as.data.frame(do.call(rbind, dados))
# Retorne o dataframe de dados
return(dados_df)
}
# Extrair os dados entre a primeira e a última linha do PDF
dados <- extrair_dados(texto_pdf)
# Carregue o pacote openxlsx
library(openxlsx)
# Abra a planilha do Excel
wb <- createWorkbook()
# Adicione uma nova planilha
addWorksheet(wb, "Colunas")
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Colunas", dados[, i], startCol = i, startRow = 1)
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold", hAlign = "center"))
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
# Caminho para o arquivo PDF do cartão de ponto
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
# Extraia o texto do PDF
texto_pdf <- pdf_text(caminho_pdf)
# Processamento do texto e extração dos dados
# Aqui você precisaria implementar a lógica para extrair as informações relevantes
# Função para extrair os dados entre a primeira e a última linha do PDF
extrair_dados <- function(texto) {
# Divida o texto em linhas
linhas <- strsplit(texto, "\n")[[1]]
# Inicialize uma lista para armazenar os dados de cada linha
dados <- list()
# Loop sobre as linhas para extrair os dados
for (i in 1:length(linhas)) {
linha <- linhas[i]
# Divida a linha em colunas (supondo que as colunas são separadas por espaço em branco)
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
# Adicione as colunas à lista de dados
dados[[i]] <- colunas
}
# Converta a lista de dados em um dataframe
dados_df <- as.data.frame(do.call(rbind, dados))
# Retorne o dataframe de dados
return(dados_df)
}
# Extrair os dados entre a primeira e a última linha do PDF
dados <- extrair_dados(texto_pdf)
# Carregue o pacote openxlsx
library(openxlsx)
# Abra a planilha do Excel
wb <- createWorkbook()
# Adicione uma nova planilha
addWorksheet(wb, "Colunas")
# Escreva cada coluna em células separadas e defina o estilo de célula para centralizar o conteúdo
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Colunas", dados[, i], startCol = i, startRow = 1)
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold", hAlign = "center"))
}
# Salve a planilha
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"
texto_pdf <- pdf_text(caminho_pdf)
cat(texto_pdf)
seus_dados_de_entrada <- c("07:00")  # Exemplo de horários de entrada
seus_dados_de_saida <- c("12:00")     # Exemplo de horários de saída
dados <- data.frame(
Ocorrência = c("01/04/2024", "02/04/2024", "03/04/2024", "04/04/2024", "05/04/2024", "06/04/2024", "07/04/2024"),
Semana = c("Segunda-feira", "Terça-fera", "Quarta-feira","Quinta-feira", "Sexta-feira", "Sábado", "Domingo"),
Entrada = c("07:00"),
Saída = c("12:00"),
Entrada2 = c("13:00"),
Saída2 = c("18:00")
)
dados <- data.frame(matrix(unlist(dados), ncol = 4, byrow = TRUE))
dados <- as.character(dados)
dados <- data.frame(
Ocorrência = c("01/04/2024", "02/04/2024", "03/04/2024", "04/04/2024", "05/04/2024", "06/04/2024", "07/04/2024"),
Semana = c("Segunda-feira", "Terça-fera", "Quarta-feira","Quinta-feira", "Sexta-feira", "Sábado", "Domingo"),
Entrada = c("07:00"),
Saída = c("12:00"),
Entrada2 = c("13:00"),
Saída2 = c("18:00")
)
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
texto_pdf <- pdf_text(caminho_pdf)
dados <- extrair_dados(texto_pdf)
print(dados)
dados <- extrair_dados(texto_pdf)
print(dados)
View(dados_df)
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
# Extraia o texto do PDF
texto_pdf <- pdf_text(caminho_pdf)
# Processamento do texto e extração dos dados
# Aqui você precisaria implementar a lógica para extrair as informações relevantes
# Função para extrair os dados entre a primeira e a última linha do PDF
extrair_dados <- function(texto) {
# Divida o texto em linhas
linhas <- strsplit(texto, "\n")[[1]]
# Inicialize uma lista para armazenar os dados de cada linha
dados <- list()
# Loop sobre as linhas para extrair os dados
for (i in 1:length(linhas)) {
linha <- linhas[i]
# Divida a linha em colunas (supondo que as colunas são separadas por espaço em branco)
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
# Adicione as colunas à lista de dados
dados[[i]] <- colunas
}
dados_df <- as.data.frame(do.call(rbind, dados))
return(dados_df)
}
dados <- extrair_dados(texto_pdf)
wb <- createWorkbook()
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Planilha1", dados[, i], startCol = i, startRow = 1)
}
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
# Caminho para o arquivo PDF do cartão de ponto
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
# Extraia o texto do PDF
texto_pdf <- pdf_text(caminho_pdf)
# Processamento do texto e extração dos dados
# Aqui você precisaria implementar a lógica para extrair as informações relevantes
# Função para extrair os dados entre a primeira e a última linha do PDF
extrair_dados <- function(texto) {
# Divida o texto em linhas
linhas <- strsplit(texto, "\n")[[1]]
# Inicialize uma lista para armazenar os dados de cada linha
dados <- list()
# Loop sobre as linhas para extrair os dados
for (i in 1:length(linhas)) {
linha <- linhas[i]
# Divida a linha em colunas (supondo que as colunas são separadas por espaço em branco)
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
# Adicione as colunas à lista de dados
dados[[i]] <- colunas
}
# Converta a lista de dados em um dataframe
dados_df <- as.data.frame(do.call(rbind, dados))
# Retorne o dataframe de dados
return(dados_df)
}
# Extrair os dados entre a primeira e a última linha do PDF
dados <- extrair_dados(texto_pdf)
print(dados)
# Carregue o pacote openxlsx
library(openxlsx)
# Abra a planilha do Excel
wb <- createWorkbook()
# Adicione uma nova planilha
addWorksheet(wb, "Colunas")
# Escreva cada coluna em células separadas e defina o estilo de célula para centralizar o conteúdo
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Colunas", dados[, i], startCol = i, startRow = 1)
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold", hAlign = "center"))
}
# Salve a planilha
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
View(dados)
View(dados)
install.packages("pdftools")
install.packages("openxlsx")
install.packages("xlsx")
install.packages("pdftools")
install.packages("openxlsx")
install.packages("openxlsx")
install.packages("openxlsx")
install.packages("xlsx")
library(pdftools)
library(openxlsx)
library(xlsx)
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"
texto_pdf <- pdf_text(caminho_pdf)
cat(texto_pdf)
seus_dados_de_entrada <- c("07:00")  # Exemplo de horários de entrada
seus_dados_de_saida <- c("12:00")     # Exemplo de horários de saída
dados <- data.frame(
Ocorrência = c("01/04/2024", "02/04/2024", "03/04/2024", "04/04/2024", "05/04/2024", "06/04/2024", "07/04/2024"),
Semana = c("Segunda-feira", "Terça-fera", "Quarta-feira","Quinta-feira", "Sexta-feira", "Sábado", "Domingo"),
Entrada = c("07:00"),
Saída = c("12:00"),
Entrada2 = c("13:00"),
Saída2 = c("18:00")
)
View(dados)
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
texto_pdf <- pdf_text(caminho_pdf)
extrair_dados <- function(texto) {
linhas <- strsplit(texto, "\n")[[1]]
dados <- list()
for (i in 1:length(linhas)) {
linha <- linhas[i]
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
dados[[i]] <- colunas
}
dados_df <- as.data.frame(do.call(rbind, dados))
return(dados_df)
}
dados <- extrair_dados(texto_pdf)
print(dados)
View(dados)
wb <- createWorkbook()
addWorksheet(wb, "Colunas")
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Colunas", dados[, i], startCol = i, startRow = 1)
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold", hAlign = "center"))
}
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Colunas", dados[, i], startCol = i, startRow = 1)
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold"), gridExpand = TRUE)
setColWidths(wb, "Colunas", cols = i, widths = "auto")
}
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
texto_pdf <- pdf_text(caminho_pdf)
extrair_dados <- function(texto) {
linhas <- strsplit(texto, "\n")[[1]]
dados <- list()
for (i in 1:length(linhas)) {
linha <- linhas[i]
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
dados[[i]] <- colunas
}
dados_df <- as.data.frame(do.call(rbind, dados))
return(dados_df)
}
dados <- extrair_dados(texto_pdf)
wb <- createWorkbook()
addWorksheet(wb, "Colunas")
for (i in 1:ncol(dados)) {
print(paste("Escrevendo coluna", i, "na planilha..."))
writeData(wb, "Colunas", dados[, i], startCol = i, startRow = 1)
addStyle(wb, "Colunas", rows = 1:(nrow(dados) + 1), cols = i, style = createStyle(textDecoration = "bold"), gridExpand = TRUE)
setColWidths(wb, "Colunas", cols = i, widths = "auto")
}
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
extrair_dados_todas_paginas <- function(texto) {
dados_todas_paginas <- list()
for (pagina in texto) {
linhas <- strsplit(pagina, "\n")[[1]]
dados_pagina <- list()
for (i in 1:length(linhas)) {
linha <- linhas[i]
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
dados_pagina[[i]] <- colunas
dados_todas_paginas[[length(dados_todas_paginas) + 1]] <- as.data.frame(do.call(rbind, dados_pagina))
return(dados_todas_paginas)
}
dados_todas_paginas <- extrair_dados_todas_paginas(texto_pdf)
for (i in 1:length(dados_todas_paginas)) {
addWorksheet(wb, paste0("Página", i))
writeData(wb, paste0("Página", i), dados_todas_paginas[[i]])
}
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
texto_pdf <- pdf_text(caminho_pdf)
extrair_dados_todas_paginas <- function(texto) {
dados_todas_paginas <- list()
for (pagina in texto) {
linhas <- strsplit(pagina, "\n")[[1]]
caminho_pdf <- "../Test_PJ//C_P_teste.pdf"  # Substitua pelo caminho correto para o seu arquivo PDF
texto_pdf <- pdf_text(caminho_pdf)
extrair_dados_todas_paginas <- function(texto) {
dados_todas_paginas <- list()
for (pagina in texto) {
linhas <- strsplit(pagina, "\n")[[1]]
dados_pagina <- list()
for (i in 1:length(linhas)) {
linha <- linhas[i]
colunas <- unlist(strsplit(linha, "\n"))  # Separadas por um ou mais espaços em branco
dados_pagina[[i]] <- colunas
dados_todas_paginas[[length(dados_todas_paginas) + 1]] <- as.data.frame(do.call(rbind, dados_pagina))
return(dados_todas_paginas)
}
dados_todas_paginas <- extrair_dados_todas_paginas(texto_pdf)
wb <- createWorkbook()
for (i in 1:length(dados_todas_paginas)) {
addWorksheet(wb, paste0("Página_", i))
writeData(wb, paste0("Página_", i), dados_todas_paginas[[i]])
}
saveWorkbook(wb, "../Test_PJ//Test_PJ.xlsx", overwrite = TRUE)
